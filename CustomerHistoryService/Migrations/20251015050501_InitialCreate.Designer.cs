// <auto-generated />
using System;
using CustomerHistoryService.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CustomerHistoryService.Migrations
{
    [DbContext(typeof(CustomerHistoryDbContext))]
    [Migration("20251015050501_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CustomerHistoryService.Domain.CustomerHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Histories");
                });

            modelBuilder.Entity("CustomerHistoryService.Domain.NotificationRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CustomerHistoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerHistoryId");

                    b.ToTable("NotificationRecord");
                });

            modelBuilder.Entity("CustomerHistoryService.Domain.PaymentRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CustomerHistoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ProcessedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerHistoryId");

                    b.ToTable("PaymentRecord");
                });

            modelBuilder.Entity("CustomerHistoryService.Domain.ReservationRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CustomerHistoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReservationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CustomerHistoryId");

                    b.ToTable("ReservationRecord");
                });

            modelBuilder.Entity("CustomerHistoryService.Domain.NotificationRecord", b =>
                {
                    b.HasOne("CustomerHistoryService.Domain.CustomerHistory", null)
                        .WithMany("Notifications")
                        .HasForeignKey("CustomerHistoryId");
                });

            modelBuilder.Entity("CustomerHistoryService.Domain.PaymentRecord", b =>
                {
                    b.HasOne("CustomerHistoryService.Domain.CustomerHistory", null)
                        .WithMany("Payments")
                        .HasForeignKey("CustomerHistoryId");
                });

            modelBuilder.Entity("CustomerHistoryService.Domain.ReservationRecord", b =>
                {
                    b.HasOne("CustomerHistoryService.Domain.CustomerHistory", null)
                        .WithMany("Reservations")
                        .HasForeignKey("CustomerHistoryId");
                });

            modelBuilder.Entity("CustomerHistoryService.Domain.CustomerHistory", b =>
                {
                    b.Navigation("Notifications");

                    b.Navigation("Payments");

                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
